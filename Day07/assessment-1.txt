// *** toshikatsu hoshi *** 星　利勝

・テスト全問パス
・JSDocを追加している
・論理和未使用


assessment-1お疲れさまでした！

テストは全問パスしています！
おめでとうございます！

1問目、2問目にもJSDocを追記していただいたんですね！！！
素晴らしいです！

また、引数名を含めたコードスタイルが、非常に整っていて見やすいコードになっています！
この点で指摘できる部分がまったく見つかりません！

以下はご参考までです。

1問目は、今回の問題では変数がひとつでまったく問題はないですが、文字列連結を行なう際はテンプレートリテラルを使用するとすっきりします。
これはBTCでも標準に使われているとのことです。

3問目は同じ文字列を複数回 returnで記述されていますよね。
論理積を使用されているのは非常に良いですが、もうひとつ何かありませんでしたっけ？
それを使用して「条件に合う場合と、そうではない場合」というロジックに見直すことができそうです。
（その場合は適宜改行を入れて見やすくすると、更に良いコードになりますね。）

コーディングは様々なやり方があり、要件を全うしていれば正解ですし、
「いやいや、ここは見やすく理解しやすいようにこうしているんだ」
というのは全然アリですので、あくまでご参考までに見てください。

これからもこの調子で、楽しくやっていきましょう！


// *** masato ishichi *** 石地　祐斗

・テスト全問パス
・引数間、演算子前後にスペースが入っていない箇所あり
・すべての組み合わせを ifでコーディング


assessment-1お疲れさまでした！

テストは全問パスしています！
おめでとうございます！

すべての問題で、返す値の意味をしっかりと理解されていますね！
非常に良いです。

コードスタイルは見やすくはなっていますが、以下を加味していただくと更に良くなります。
・JavaScriptのインデントは、スペース2個分が慣例となっています。
 これはVSCodeの設定から変更することが可能です。
・仮引数間や演算子の前後にスペースのないところがあります。

以下はご参考までです。

1問目は、今回の問題では変数がひとつでまったく問題はないですが、文字列連結を行なう際はテンプレートリテラルを使用するとすっきりします。
これはBTCでも標準に使われているとのことです。

3問目は、すべての組み合わせに対して条件分岐を記述していただいたのですね！
論理積を使われているところも良いですね。
ただ、これで正しく動作しますが、若干冗長なコードになっています。
また同じ文字列を複数回 returnで記述されていますよね。
「"この季節の平均的な気温です。" となる条件と、それ以外」という観点で条件分岐を行ない、"または"という論理演算子も使えば更に良くなりそうです。

コーディングは様々なやり方があり、要件を全うしていれば正解ですし、
「いやいや、ここは見やすく理解しやすいようにこうしているんだ」
というのは全然アリですので、あくまでご参考までに見てください。

これからもこの調子で、楽しくやっていきましょう！


// *** hayato kubo *** 久保　颯人

・テスト全問パス
・期待されないデータ型の引数が来た際の対応を行なっている
・コードスタイル整っている


assessment-1お疲れさまでした！

テストは全問パスしています！
おめでとうございます！

期待されない引数が来た際の対応まで考えていただいたんですね！
素晴らしいです！

また、引数名を含めたコードスタイルが、非常に整っていて見やすいコードになっています！
この点で指摘できる部分がまったく見つかりません！
非常に良いです。

すべての問題で、返す値の意味をしっかりと理解されていますね！

以下はご参考までです。

1問目は、今回の問題では変数がひとつでまったく問題はないですが、文字列連結を行なう際はテンプレートリテラルを使用するとすっきりします。
これはBTCでも標準に使われているとのことです。

3問目は同じ文字列を複数回 returnで記述されていますよね。
すべての季節についての条件分岐と、すべての気温についての条件分岐のセットで分岐されていますが、「"この季節の平均的な気温です。" となる条件と、それ以外」という観点で条件分岐を行なうようなロジックにすれば、簡潔になりそうです。

コーディングは様々なやり方があり、要件を全うしていれば正解ですし、
「いやいや、ここは見やすく理解しやすいようにこうしているんだ」
というのは全然アリですので、あくまでご参考までに見てください。

これからもこの調子で、楽しくやっていきましょう！


// *** yuiha mochizuki *** 望月結羽

・テスト全問パス
・スペースのないところあり
・論理演算子未使用


assessment-1お疲れさまでした！

テストは全問パスしています！
おめでとうございます！

すべての問題で、返す値の意味をしっかりと理解されていますね！
非常に良いです。

コードスタイルは見やすくはなっていますが、以下を加味していただくと更に良くなります。
・JavaScriptのインデントは、スペース2個分が慣例となっています。
 これはVSCodeの設定から変更することが可能です。
・ifや else ifの前後にスペースのないところがあります。
 （テスト関数のスタイルと比較してみてください。）

以下はご参考までです。

1問目は、今回の問題では変数がひとつでまったく問題はないですが、文字列連結を行なう際はテンプレートリテラルを使用するとすっきりします。
これはBTCでも標準に使われているとのことです。

3問目は、同じ文字列を複数回 returnで記述されていますよね。
論理演算子を使用して条件分岐を行なうロジックにすれば、リファクタリングできそうです。

コーディングは様々なやり方があり、要件を全うしていれば正解ですし、
「いやいや、ここは見やすく理解しやすいようにこうしているんだ」
というのは全然アリですので、あくまでご参考までに見てください。

これからもこの調子で、楽しくやっていきましょう！
